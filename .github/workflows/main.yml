name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          npm cache clean --force
          rm -rf node_modules package-lock.json
          npm install

      - name: Build
        run: npm run build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: built-app
          path: |
            .next/
            public/
            app/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && needs.build.result == 'success'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: built-app
          path: .

      - name: Install sshpass and rsync
        run: sudo apt-get install -y sshpass rsync

      - name: Add SSH key to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts

      - name: Set permissions on the server
        run: |
          echo ${{ secrets.DEPLOY_PASSWORD }} | sshpass -p ${{ secrets.DEPLOY_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} 'echo ${{ secrets.DEPLOY_PASSWORD }} | sudo -S chown -R ${{ secrets.DEPLOY_USER }}:www-data /var/www/kristofferlorentzen && echo ${{ secrets.DEPLOY_PASSWORD }} | sudo -S chmod -R 775 /var/www/kristofferlorentzen'

      - name: Deploy to server
        run: |
          # Variables
          LOCAL_PROJECT_PATH="$(pwd)"
          REMOTE_USER="${{ secrets.DEPLOY_USER }}"
          REMOTE_HOST="${{ secrets.DEPLOY_HOST }}"
          REMOTE_PROJECT_PATH="/var/www/kristofferlorentzen"
          SSH_PASS="${{ secrets.DEPLOY_PASSWORD }}"
          # Sync files to the server using rsync with increased verbosity and timeout
          echo "Starting rsync..."
          sshpass -p $SSH_PASS rsync -avz --timeout=600 --delete --exclude='.git' --exclude='node_modules' --no-perms --omit-dir-times $LOCAL_PROJECT_PATH/ $REMOTE_USER@$REMOTE_HOST:$REMOTE_PROJECT_PATH
          echo "rsync completed."
          # Connect to the server to install dependencies and restart the application
          echo "Connecting to server to install dependencies and restart application..."
          sshpass -p $SSH_PASS ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST << 'EOF'
            cd $REMOTE_PROJECT_PATH
            # Ensure npm and pm2 are installed and accessible
            export PATH="$HOME/.nvm/versions/node/v18.20.3/bin:$PATH"
            npm install
            pm2 restart nextjs-app || pm2 start npm --name "nextjs-app" -- start
          EOF

      - name: Completed deployment message
        run: echo "Deployed app to server"
